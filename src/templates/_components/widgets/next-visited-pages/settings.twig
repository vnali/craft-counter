{% import "_includes/forms" as forms %}

<div id="{{ id }}">
    {% include 'counter/_components/widgets/_includes/_dateRangeField' with { id: namespaceId, widget: widget } %}

    {{ forms.selectField({
        label: 'Page'|t('counter'),
        id: 'pageId',
        name: 'pageId',
        options: [],
        value: widget.pageId,
        errors: widget.getErrors('pageId'),
        required: true,
    }) }}

    {{ forms.textField({
        label: 'Next visits in seconds'|t('counter'),
        id: 'difference',
        name: 'difference',
        required: true,
        value: widget.difference is defined ? widget.difference,
    }) }}

    {{ forms.textField({
        label: 'Limit number of pages on chart'|t('counter'),
        id: 'nextPagesLimit',
        name: 'nextPagesLimit',
        required: false,
        tip: 'If not set, all pages will appear on the chart. the minimum value is 0.',
        value: widget.nextPagesLimit is defined ? widget.nextPagesLimit,
    }) }}

    {#
    {% set typeInput %}
        <div class="select">
            <select id="type" name="type">
                <option value="percentage"{% if widget.type=='percentage' %} selected{% endif %}>{{ 'Percentage'|t('counter') }}</option>
                <option value="count"{% if widget.type=='count' %} selected{% endif %}>{{ 'Count'|t('counter') }}</option>
            </select>
        </div>
    {% endset %}

    {{ forms.field({
        id: 'type',
        label: "Type"|t('counter'),
    }, typeInput) }}
    #}

</div>

{% if selectedPage %}
    {% set options = [{'id': widget.pageId, 'name': selectedPage }] %}
{% else %}
    {% set options = [] %}
{% endif %}

{% css %}
    div[data-attribute=pageId] .select
    {
        min-width: 300px;
    }
    div[data-attribute=pageId] .selectize-input
    {
       overflow: hidden;
    }
{% endcss %}
{% js %}

    var csrfTokenName;
    var csrfTokenValue;
    $.ajax({
        url: '{{ sessionInfoUrl }}',
        type: 'GET',
        dataType: 'json',
        success: function(result) { 
            csrfTokenName = result.csrfTokenName;
            csrfTokenValue = result.csrfTokenValue;
        }
    });

    $('#{{ namespaceId }} div[data-attribute=items] select').selectize({
        plugins: ['remove_button'],
        dropdownParent: 'body',
    });

    $('#{{ namespaceId }} div[data-attribute=pageId] select').selectize({
        maxItems: 1,
        valueField: 'id',
        labelField: 'name',
        searchField: 'name',
        autocomplete: true,
        persist: false,
        plugins: ['remove_button'],
        dropdownParent: 'body',
        create: false,
        openOnFocus: false,
        options: {{ options|json_encode|raw }},
        items: ['{{ widget.pageId }}'],
        render: {
            option: function(item, escape) {
                return '<div>' + item.name + '</div>';
            }
        },
        load: function(query, callback) {
            if (!query.length) return callback();
            var data = {};
            data[csrfTokenName] = csrfTokenValue;
            data['search'] = query,
            $.ajax({
                url: '{{ pageListURL }}',
                type: 'POST',
                dataType: 'json',
                data: data,
                success: function(res) {
                    callback(res);
                }
            });
        }
    });
{% endjs %}